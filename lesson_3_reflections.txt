When would you want to use a remote repository rather than keeping all your work local?
Remote repositories are especially useful for collaborative projects as they allow all participants to contribute to the project

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
This would be particularly important when many people are working on the same repo. That way you don't break the code running on your local machine.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Forking allows us to make a copy of a GitHub repository and then make our own changes. We can use this when we don't have permission to change the original repo. Cloning makes a copy of a repo on our local machine. And branching is similar to forking but only happens in one repo.

What is the benefit of having a copy of the last known state of the remote stored locally?
Having a local copy of the last known state of the remote is beneficial as it insures that we are always working on the most recent code.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Collaboration without Git and GitHub would involve emailing and sharing tons of versions of documents and getting confused about changes between them. While it could be easier since you wouldn't have to play with the gymnastics of version control, it really only makes sense for very small projects.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Changes in a separate branch are best for experimental features or things that are not yet ready for live deployment.
